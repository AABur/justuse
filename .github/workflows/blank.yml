name: Unit Tests

on:
  pull_request:
    types: [assigned, unassigned, labeled, unlabeled, opened, edited, closed, reopened, synchronize, ready_for_review, locked, unlocked, review_requested, review_request_removed]
  push:
  registry_package:
    types: [published, updated]
  release:
    types: [published, unpublished, created, edited, deleted, prereleased, released]

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest
    steps:
      - name: Ubuntu - Check out source
        uses: actions/checkout@v2
      - name: Ubuntu - Run Unit Tests with Coverage
        run: |
          export FTP_USER="${{ secrets.FTP_USER }}"
          export FTP_PASS="${{ secrets.FTP_PASS }}"
          mkdir -p ~/.justuse-python/
          echo "debug = true" > ~/.justuse-python/config.toml
          [ -e tests/coverage.sh ] && bash tests/coverage.sh || {
            python3 -m pip install --force-reinstall --upgrade -r requirements.txt
            python3 -m pytest
          }

  test-windows:
    runs-on: windows-latest

    steps:
      - name: Run a multi-line script
        uses: actions/checkout@v2
        uses: actions/setup-python@v2
          with:
            python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
            architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
      - run: |
          echo "Setting TLS security properties ..."
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          echo "Windows-Tests: Preloading package dependencies ..."
          & "python.exe" -m pip install --force-reinstall --upgrade -r requirements.txt
          echo "Windows-Tests: Running tests ..."
          $env:DEBUG = 1
          $env:ERRORS = 1
          & "python.exe" -m pytest

  test-macos:
    runs-on: macos-latest

    steps:
      - name: Run a multi-line script
        uses: actions/checkout@v2
      - run: |
          echo "MacOS-Tests: Preloading package dependencies ..."
          python3 -m pip install --force-reinstall --upgrade -r requirements.txt
          echo "MacOS-Tests: Running tests ..."
          mkdir -p ~/.justuse-python/
          echo "debug = true" > ~/.justuse-python/config.toml
          env DEBUG=1 ERRORS=1 python3 -m pytest
