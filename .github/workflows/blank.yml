# This is a basic workflow to help you get started with Actions

name: Run Unit Tests

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Build actions

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo "Running all discoverable unit tests ..." Add other actions to build,
          python3 -m pip install anyio mmh3 yarl
          pwd
          ls -lA
          ls -lAR ./src ./tests
          dir="$( pwd )"
          export PYTHONPATH="$dir/src:$dir/test"
          env
          python3 -m site
          python3 -c 'import unittest; suite = unittest.defaultTestLoader.discover("./tests", pattern="*.py", top_level_dir="./tests"); rslt = unittest.TestResult(); suite.run(rslt); print(rslt);' || echo "Failure: $?"
          cd tests && env "PYTHONPATH=$dir/src:$dir/test" python3 -m unittest discover -p "mod*.py" -s $dir/tests -t $dir/tests
