
name: Unit Tests


on:
  check_run:
    types: [created, rerequested, completed]
  check_suite:
    types: [completed, requested, rerequested]
  create:
  delete:
  deployment:
  deployment_status:
  fork:
  gollum:
  issue_comment:
    types: [created, deleted]
  issues:
    types: [transferred, pinned, unpinned, closed, reopened, assigned, unassigned, labeled, unlabeled, locked, unlocked, milestoned, demilestoned]
  label:
    types: [created, edited, deleted]
  milestone:
    types: [created, closed, opened, edited, deleted]
  page_build:
  project:
    types: [created, updated, closed, reopened, edited, deleted]
  project_card:
    types: [created, moved, converted, edited, deleted]
  project_column:
    types: [created, updated, moved, deleted]
  public:
  pull_request:
    types: [assigned, unassigned, labeled, unlabeled, opened, edited, closed, reopened, synchronize, ready_for_review, locked, unlocked, review_requested, review_request_removed]
  pull_request_review:
    types: [submitted, edited, dismissed]
  pull_request_review_comment:
    types: [created, edited, deleted]
  pull_request_target:
    types: [assigned, unassigned, labeled, unlabeled, opened, edited, closed, reopened, synchronize, ready_for_review, locked, unlocked, review_requested, review_request_removed]
  push:
  registry_package:
    types: [published, updated]
  release:
    types: [published, unpublished, created, edited, deleted, prereleased, released]
  status:
  watch:
    types: [started]

  workflow_dispatch:

jobs:
  test-ubuntu:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Run a multi-line script
        run: |
          echo "Linux-Tests: Preloading package dependencies ..."
          python3 -m pip install anyio mmh3 packaging pip pytest requests yarl
          echo "Linux-Tests: Running tests ..."
          python3 -m pytest
  
  test-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Run a multi-line script
        run: |
          echo "Setting TLS security properties ..."
          [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
          echo "Downloading recent Python 3 ..."
          Invoke-WebRequest -Uri "https://www.python.org/ftp/python/3.9.0/python-3.9.0.exe" -OutFile "c:/temp/python-3.9.0.exe"
          echo "Installing Python 3 ..."
          c:/temp/python-3.9.0.exe /quiet InstallAllUsers=0 PrependPath=1 Include_test=0
          echo "Waiting for setup to complete ..."
          $env:PATH = "$env:LOCALAPPDATA\Programs\Python\Python39-32;$env:LOCALAPPDATA\Programs\Python\Python39-32\lib;$env:PATH"
          env
          while (!(Test-Path "$env:LOCALAPPDATA/Programs/Python/Python39-32/python.exe")) {
            Write-Host "Waiting for installation"
            Start-Sleep 1
          }
          
          $pyver = ""
          while (!($pyver.Contains(" 3.9"))) {
            $pyver = $(
              & "$env:LOCALAPPDATA/Programs/Python/Python39-32/python.exe" -m pip --version || & { $global:LASTEXITCODE = 0; }
            ) -join "`n"
          }
          echo "Windows-Tests: Preloading package dependencies ..."
          & "$env:LOCALAPPDATA/Programs/Python/Python39-32/python.exe" -m pip install anyio mmh3 packaging pip pytest requests yarl
          echo "Windows-Tests: Running tests ..."
          & "$env:LOCALAPPDATA/Programs/Python/Python39-32/python.exe" -m pytest


  test-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Run a multi-line script
        run: |
          echo "MacOS-Tests: Preloading package dependencies ..."
          python3 -m pip install anyio mmh3 packaging pip pytest requests yarl
          echo "MacOS-Tests: Running tests ..."
          python3 -m pytest
  